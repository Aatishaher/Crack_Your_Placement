class Solution {
public:
    pair<bool,int> f(TreeNode* root){
        if(root==NULL){
            pair<bool,int> p=make_pair(true,0);
            return p;
        }
        pair<bool,int> left=f(root->left);
        pair<bool,int> right=f(root->right);
        pair<bool,int> ans;
        if(abs(left.second-right.second)<=1 && left.first==true && right.first==true){
            ans.first=true;
        }
        else{
            ans.first=false;
        }
        ans.second=max(left.second,right.second)+1;
        cout<<ans.first<<endl;
        return ans;
    }
    bool isBalanced(TreeNode* root) {
        return f(root).first;
    }
};

class Solution {
  public:
    // Function that constructs BST from its preorder traversal.
    Node* sol(vector<int> pre){
        if(pre.size()==0){
            return NULL;
        }
        Node* root=newNode(pre[0]);
        if(pre.size()==1){
            return root;
        }
        vector<int> left;
        vector<int> right;
        for(int i=1;i<pre.size();i++){
            if(pre[i]>pre[0]){
                right.push_back(pre[i]);
            }
            else{
                left.push_back(pre[i]);
            }
        }
        root->left=sol(left);
        root->right=sol(right);
        return root;
    }
    Node* Bst(int pre[], int size) {
        // code here
        vector<int> p;
        for(int i=0;i<size;i++){
            p.push_back(pre[i]);
        }
        return sol(p);
    }
};

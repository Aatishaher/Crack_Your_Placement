class Solution {
public:
    ListNode* rev(ListNode* head){
        ListNode* pre=NULL;
        ListNode* cur=head;
        ListNode* next=head->next;
        while(cur->next){
            cur->next=pre;
            pre=cur;
            cur=next;
            next=next->next;
        }
        cur->next=pre;
        pre=cur;
        return pre;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        l1=rev(l1);
        l2=rev(l2);
        int carry=0;
        int sum=l1->val+l2->val;
        //cout<<sum<<" ";
        ListNode* head=new ListNode(sum%10);
        carry=sum/10;
        //cout<<carry;
        ListNode* temp=head;
        l1=l1->next;
        l2=l2->next;
        while(l1 && l2){
            sum=l1->val+l2->val+carry;
            if(carry){
                carry=0;
            }
            temp->next=new ListNode(sum%10);
            temp=temp->next;
            carry=sum/10;
            l1=l1->next;
            l2=l2->next;
        } 
        while(l1){
            sum=l1->val+carry;
            //cout<<sum<<" ";
            if(carry){
                carry=0;
            }
            temp->next=new ListNode(sum%10);
            temp=temp->next;
            carry=sum/10;
            l1=l1->next;
        }
        while(l2){
            sum=l2->val+carry;
            if(carry){
                carry=0;
            }
            temp->next=new ListNode(sum%10);
            temp=temp->next;
            carry=sum/10;
            l2=l2->next;
        }
        if(carry){
            temp->next=new ListNode(1);
        }
        return rev(head);
    }
};

class Solution {
public:
    int sol(vector<int> &prices,int buy,int ind,vector<vector<int>> &dp){
        if(ind==prices.size() || buy==0){
            return 0;
        }
        if(dp[buy][ind]!=-1){
            return dp[buy][ind];
        }
        if(buy%2==0){
            return dp[buy][ind]=max(-prices[ind]+sol(prices,buy-1,ind+1,dp),sol(prices,buy,ind+1,dp));
        }
        else{
            return dp[buy][ind]=max(prices[ind]+sol(prices,buy-1,ind+1,dp),sol(prices,buy,ind+1,dp));
        }
    }
    int maxProfit(int k, vector<int>& prices) {
        //int buy=k*2;
        vector<vector<int>> dp((k*2)+1,vector<int>(prices.size()+1,0));
        for(int j=prices.size()-1;j>=0;j--){
            for(int i=(k*2)-1;i>=0;i--){
                if(i%2==0){
                    dp[i][j]=max(-prices[j]+dp[i+1][j+1],dp[i][j+1]);
                }
                else{
                    dp[i][j]=max(prices[j]+dp[i+1][j+1],dp[i][j+1]);
                }
            }
        }
        return dp[0][0];
        //return sol(prices,buy,0,dp);
    }
};

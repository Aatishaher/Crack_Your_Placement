class Solution {
public:
    int sol(vector<int>& nums,int ind,int last_take,vector<vector<int>> &dp){
        if(ind==nums.size()){
            return 0;
        }
        if(dp[ind][last_take+1]!=-1){
            return dp[ind][last_take+1];
        }
        int not_take=sol(nums,ind+1,last_take,dp);
        int take=INT_MIN;
        if(last_take==-1 || nums[ind]>nums[last_take]){
            take=1+sol(nums,ind+1,ind,dp);
        }
        // else if(last_take==-1){
        //     take=1+sol(nums,ind+1,ind,dp);
        // }
        return dp[ind][last_take+1]=max(take,not_take);
    }
    int lengthOfLIS(vector<int>& nums) {
        vector<vector<int>> dp(nums.size(),vector<int>(nums.size()+1,-1));
        return sol(nums,0,-1,dp);
    }
};

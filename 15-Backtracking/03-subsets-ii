class Solution {
public:
    void solve(vector<int> nums,vector<int> output, int index,vector<vector<int>>& ans){
        if(index>=nums.size()){
            sort(output.begin(),output.end());
            ans.push_back(output);
            return;
        }
        solve(nums,output,index+1,ans);
        int element=nums[index];
        output.push_back(element);
        solve(nums,output,index+1,ans);
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
         vector<vector<int>> ans;
         vector<int> output;
         int index=0;
         solve(nums,output, index,ans);
         sort(ans.begin(),ans.end());
         vector<vector<int>> sol;
         map<vector<int>,bool> mp;
         for(int i=0;i<ans.size();i++){
             vector<int> ch;
             for(int j=0;j<ans[i].size();j++){
                 ch.push_back(ans[i][j]);
             }
             if(mp[ch]==true){
                     continue;
                 }
                 else{
                     sol.push_back(ch);
                     mp[ch]=true;
                 }
         }
         return sol;
    }
};

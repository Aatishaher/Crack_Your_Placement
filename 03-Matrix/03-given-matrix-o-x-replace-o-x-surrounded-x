class Solution {
public:
    bool valid(int i,int j,int row,int col){
        if(i<=0 || j<=0 || i>=row || j>=col){
            return false;
        }
        return true;
    }
    void dfs(int i,int j,vector<vector<char>> &board,int row,int col){
        board[i][j]='-';
        if(valid(i+1,j,row,col) && board[i+1][j]=='O'){
            dfs(i+1,j,board,row,col);
        }
        if(valid(i-1,j,row,col) && board[i-1][j]=='O'){
            dfs(i-1,j,board,row,col);
        }
        if(valid(i,j-1,row,col) && board[i][j-1]=='O'){
            dfs(i,j-1,board,row,col);
        }
        if(valid(i,j+1,row,col) && board[i][j+1]=='O'){
            dfs(i,j+1,board,row,col);
        }
    }
    void solve(vector<vector<char>>& board) {
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                if(i==0 || j==0 || i==board.size()-1 || j==board[0].size()-1){
                    if(board[i][j]=='O'){
                        dfs(i,j,board,board.size(),board[0].size());
                    }
                }
            }
        }
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                if(board[i][j]=='O'){
                    board[i][j]='X';
                }
                else if(board[i][j]=='-'){
                    board[i][j]='O';
                }
            }
        }
    }
};

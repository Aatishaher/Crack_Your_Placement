class Solution {
public:
    void next_small(vector<int>& next,vector<int>& heights){
        stack<int> st;
        st.push(-1);
        for(int i=heights.size()-1;i>=0;i--){
            while(!st.empty()){
                if(st.top()==-1){
                    next[i]=-1;
                    st.push(i);
                    break;
                }
                else if(heights[st.top()]>=heights[i]){
                    st.pop();
                }
                else{
                    next[i]=st.top();
                    st.push(i);
                    break;
                }
            }
        }

    }
    void pre_small(vector<int>& pre,vector<int>& heights){
        stack<int> st;
        st.push(-1);
        for(int i=0;i<heights.size();i++){
            while(!st.empty()){
                if(st.top()==-1){
                    pre[i]=-1;
                    st.push(i);
                    break;
                }
                else if(heights[st.top()]>=heights[i]){
                    st.pop();
                }
                else{
                    pre[i]=st.top();
                    st.push(i);
                    break;
                }
            }
        }
    }

    int largestRectangleArea(vector<int>& heights) {
        vector <int> next(heights.size());
        next_small(next,heights);
        for(int i=0;i<next.size();i++){
            cout<<next[i]<<" ";
        }
        vector<int> pre(heights.size());
        pre_small(pre,heights);
        int area=0;
        for(int i=0;i<heights.size();i++){
            if(next[i]==-1){
                next[i]=heights.size();
            }
            int curarea=heights[i]*(next[i]-pre[i]-1);
            area=max(area,curarea);
        }
        return area;

    }
};
